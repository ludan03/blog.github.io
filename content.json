{"meta":{"title":"白 日 淡","subtitle":null,"description":null,"author":"Ludan","url":"http://ludan03.github.io"},"pages":[{"title":"tags","date":"2018-11-08T15:17:54.000Z","updated":"2018-11-08T15:18:32.501Z","comments":true,"path":"tags/index.html","permalink":"http://ludan03.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"deployment","date":"2019-01-18T05:53:25.827Z","updated":"2019-01-18T05:59:16.328Z","comments":true,"path":"2019/01/18/deployment.html","link":"","permalink":"http://ludan03.github.io/2019/01/18/deployment.html","excerpt":"","text":"导语：为什么需要自动化部署 随着java系统架构由单体应用向分布式发展，本地单服务器向云端多服务器发展。java环境产生的代码需要向越来越多的服务器进行部署。 敏捷开发的流行，让客户或领导急于看到最新的开发进展，需要我们频繁的更新多台服务器的代码。繁琐且重复的部署命令，不同服务器之间的环境差距，往往容易产生无法预知的问题。 在公司又不愿意花钱招运维的情况下，苦逼的java后端程序员急需要使用一种提高部署效率的解决方案。 Docker+DockerCompose+Docker-register+GitLab的方式就进入了我们的视野。 DockerDocker是什么 Docker是一个开源的应用容器引擎。开发者可以将自己的应用打包在可移植的容器中，然后发布到任何Linux上都可以运行。真正的实现了一次构建到处运行。 Docker是一种虚拟化技术，由于直接运行在宿主机内核上，且不会虚拟任何硬件。因此资源耗费低，开启速度快，可以达到秒级启动。由于资源耗费低，在一台宿主机上甚至可以启动上千容器。此外，各个容器直接是相互隔离的，安全且高可用，一个容器出问题不会导致整个宿主机出问题。 Docker架构 Docker是C/S架构，通过Api管理容器。 Docker的容器通过镜像来创建，镜像类似于一套模板。容器可以根据一个镜像创建多个容器，每一个容器之间互相隔离。镜像中的数据会影响容器创建时的数据，容器产生的数据变化不会影响镜像。 Docker文件系统 Docker使用分层文件架构。一个镜像不是一个文件，而是一组文件的集合。在多个镜像之间有相互公用的底层文件时，能大大降低存储空间。因此在创建镜像的时候，每一层尽量只添加需要添加的东西，提供文件的复用率。 Docker镜像仓库 Docker镜像存在镜像仓库中，Docker官方为我们提供了官方镜像库Docker Hub，我们也可以搭建自己的私有仓库。 安装Dokcer Docker分为CE社区版与EE企业版。普通人家只要装Docker CE就足够满足日常需求。 CentOS安装 ⚠️：Docer在CentOS上运行需要系统为64位，且内核版本在3.10以上。 官方教程可参考https://docs.docker.com/install/linux/docker-ce/centos/ 中文版本可参考http://www.runoob.com/docker/centos-docker-install.html 查看系统的内核版本 /]# uname -r```1234&lt;img src=&quot;http://qiniu.xuchen.link/8fad2a093a88bcdb8fb39b2ac2b89517.png&quot; width = &quot;200&quot; height = &quot;80&quot; alt=&quot;3.10以上内核版本&quot; /&gt;#### 删除旧版本 $ sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-selinux \\ docker-engine-selinux \\ docker-engine12#### 安装必要系统工具 sudo yum install -y yum-utils device-mapper-persistent-data lvm212#### 添加软件源信息 sudo yum-config-manager –add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo12#### 更新 yum 缓存 sudo yum makecache fast12#### 安装 Docker-ce sudo yum -y install docker-ce12#### 启动docker后台进程 sudo systemctl start docker12#### 测试docker，运行hello-word docker run hello-world123### 脚本安装docker#### 确保 yum 包更新到最新```sudo yum update 执行 Docker 安装脚本12curl -fsSL https://get.docker.com -o get-docker.shsudo sh get-docker.sh 启动容器进程1sudo systemctl start docker 验证镜像1sudo docker run hello-world Ubuntu安装Docker卸载旧版本1sudo apt-get remove docker docker-engine docker.io containerd runc apt安装12sudo apt-get updatesudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common 安装 GPG 证书1curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add - 写入软件信息1sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot; 更新并安装 Docker CE12sudo apt-get -y updatesudo apt-get -y install docker-ce 测试1docker run hello-world 镜像加速Ubuntu 16.04+、Debian 8+、CentOS 7 ⚠️ 针对systemd系统使用如下方法 在123456```&#123; &quot;registry-mirrors&quot;: [ &quot;https://registry.docker-cn.com&quot; ]&#125; 检查加速器是否生效在命令行执行info```1如果在命令回显的消息中出现如下信息,则表示成功 Registry Mirrors: https://registry.docker-cn.com/12### 删除docker-ce sudo yum remove docker-cesudo rm -rf /var/lib/docker12345## Docker镜像Docker的容器启动需要依赖镜像。在运行容器的时候如果本地没有镜像则自动会去docker镜像仓库中下载。### 拉取镜像可以通过```docker pull```命令主动获取镜像。命令格式为 docker pull [OPTIONS] NAME[:TAG|@DIGEST]1OPTIONS是选项。 -a, –all-tags 下载所有标记的镜像 –disable-content-trust 跳过验证（默认为true）123456NAME是镜像名，一般由```域名/IP[:端口]仓库名```构成，官方镜像默认只有仓库名TAG是标签，一般为版本号。### 展示镜像可以使用```docker image ls```命令展示所有镜像。展示的列表： $ docker images fedora REPOSITORY TAG IMAGE ID CREATED SIZEfedora rawhide ad57ef8d78d7 5 days ago 359.3 MBfedora 20 105182bb5e8b 5 days ago 372.7 MBfedora heisenbug 105182bb5e8b 5 days ago 372.7 MBfedora latest 105182bb5e8b 5 days ago 372.7 MB 105182bb5e8a 6 days ago 372.7 MB1234567列表包含了仓库名（REPOSITORY）、标签（TAG）、镜像唯一id（IMAGE ID）、最近创建日期（CREATED）、大小（SIZE）### 虚悬镜像上列表中仓库名与标签都为none的为虚悬镜像。仓库名与标签对应一个唯一的镜像，但是这个镜像可以更换。当同一个镜像名+标签所指向的镜像更换后，旧的镜像就失去指引，变成虚悬镜像，类似于java中的对象失去了引用。可以通过```docker image prune```命令删除.### 删除镜像```docker image rm [选项] &lt;镜像1&gt; [&lt;镜像2&gt; ...] 其中，镜像既可以是镜像名，短id，长id或是摘要 强制删除镜像rmi [选项] [ ...]```12345678## 使用Dockerfile定制镜像（待更新）# Docker容器## 启动容器### 新建容器并启动``` docker run [OPTIONS] IMAGE [COMMAND] [ARG...] (OPTIONS太多，不赘述)主要使用的最多的就是直接run 镜像名```12常用参数： -i Keep STDIN open even if not attached（在没有连接的情况下持续打开标准输入）-t Allocate a pseudo-TTY（分配一个伪终端）123### 启动已中止容器```docker container start [OPTIONS] 容器名1 [容器2...] 守护态运行在启动的时候，加上参数 12345可以通过```docker container logs 容器名或id```查看容器相关日志## 终止容器```docker container stop [OPTIONS] CONTAINER [CONTAINER...] 参数：1-t 关闭前等待时间，默认10s 进入容器进入容器有两个命令：123456789101112131415161718192021```attach```不推荐使用，因为在退出容器的时候会停止容器。```exec```常搭配-it使用，以交互的方式进入容器。常见用法```docker exec -it 容器名 /bin/bash```,使用后，就如普通的终端一样。# Docker仓库Docker仓库是存放docker镜像的中心，支持官方仓库与自建私有仓库。## [Docker Hub](https://hub.docker.com/)可以通过```docker search```命令来查找官方仓库中的镜像，并利用```docker pull```命令来将它下载到本地。## [docker-registry](https://docs.docker.com/registry/)官方提供用于构建私有仓库的工具。官方文档：https://docs.docker.com/registry/### 下载registry获取官方registry镜像并运行 docker run -d -p 5000:5000 –restart=always –name registry registry123### 在配置文件中添加私有仓库地址对于```systemd```系统，打开之前设置的```/etc/docker/daemon.json```,添加一条镜像地址。 { “registry-mirrors”: [ “https://registry.docker-cn.com&quot; ], “insecure-registries”: [ “127.0.0.0:5000” ]}1234567### 使用流程#### 从官方下载镜像```docker pull ubuntu 为私有镜像标记特有的名称image tag ubuntu localhost:5000/myfirstimage```1234#### 上传到私有镜像```docker push localhost:5000/myfirstimage 从私有仓库下载刚上传的镜像docker pull localhost:5000/myfirstimage DockerComposeDockerCompose是什么Docker很方便的为我们进行了应用的部署，但是当大量的容器需要进行管理时，重复的Docker指令也令我们头疼。","categories":[],"tags":[]},{"title":"书摘","slug":"bookpick","date":"2018-11-09T09:43:41.000Z","updated":"2018-11-23T05:48:15.437Z","comments":true,"path":"2018/11/09/bookpick.html","link":"","permalink":"http://ludan03.github.io/2018/11/09/bookpick.html","excerpt":"","text":"2018-11-09 【常识】[上篇 理解当代中国的七十张关键切片]梁文道 当代中国庞杂繁复，有说不完的故事，谈不尽的现象。这里的文章就像人体切片，断流截出其中关键的部分，虽然犹如管中窥豹，亦可检视全体经络的气脉动向。 2018-11-23 王朔在书中如是说 【致女儿书】 王朔崩溃就是想起了以前的历次崩溃","categories":[],"tags":[{"name":"读书","slug":"读书","permalink":"http://ludan03.github.io/tags/读书/"}]},{"title":"戒 定 慧","slug":"discipline, meditation, wisdom","date":"2018-10-16T15:04:13.000Z","updated":"2018-11-09T15:15:31.868Z","comments":true,"path":"2018/10/16/discipline, meditation, wisdom.html","link":"","permalink":"http://ludan03.github.io/2018/10/16/discipline, meditation, wisdom.html","excerpt":"","text":"戒完善道德品质 定致力于内心平静 慧培养智慧","categories":[],"tags":[{"name":"佛","slug":"佛","permalink":"http://ludan03.github.io/tags/佛/"},{"name":"国学","slug":"国学","permalink":"http://ludan03.github.io/tags/国学/"}]}]}